{"version":3,"sources":["webpack:///./index.js","webpack:///./fetchCountries.js"],"names":["debounce","require","refs","searchInput","document","querySelector","listItems","addEventListener","e","preventDefault","inputValue","target","value","innerHTML","searchQuery","fetch","baseUrl","then","response","json","catch","error","console","data","name","capital","population","flag","languages","description","log","showList","reduce","acc","language","getLanguages","template","length","PNotify","title","text","allname","map","country","join","countriesName"],"mappings":"+MAKMA,G,UAAWC,EAAQ,SAEnBC,EAAO,CACTC,YAAaC,SAASC,cAAc,gBACpCC,UAAWF,SAASC,cAAc,aAGtCH,EAAKC,YAAYI,iBAAiB,QAASP,GAE3C,SAAqBQ,GACjBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAOC,MAC5B,GAAkB,KAAfF,EACC,OAAOR,EAAKI,UAAUO,UAAY,IChBZC,EDmBXJ,EClBZK,MAASC,yCAAgBF,GAC/BG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAEC,QAAQD,MAAM,YAAYA,ODgBTJ,MAAK,SAAAM,IA+BpC,SAAkBC,EAAMC,EAASC,EAAYC,EAAMC,IAkBnD,SAAkBC,GAClBP,QAAQQ,IAAID,GACZ3B,EAAKI,UAAUO,UAAYgB,EAXvBE,CARoB,2BAEVP,EAFO,sEAGyCC,EAHzC,iDAIqBC,EAJrB,gDAWrB,SAAuBE,GACvB,OAAOA,EAAUI,QAAO,SAACC,EAAKC,GAC1B,OAAOD,EAAO,OAAOC,EAASV,KAApB,UACZ,IATuCW,CAAaP,GALjC,6BAMDD,EANC,yCAxBbS,CANab,EAAK,GAAGC,KACLD,EAAK,GAAGE,QACLF,EAAK,GAAGG,WACdH,EAAK,GAAGI,KACHJ,EAAK,GAAGK,WAIvBL,EAAKc,OAAS,GACbC,IAAQjB,MAAM,CACVkB,MAAO,SACPC,KAAM,+DAGHjB,EAAKc,OAAS,GAAKd,EAAKc,OAAS,IAMpD,SAAuBd,GACnB,IAAMkB,EAAUlB,EAAKmB,KAAI,SAAAC,GAAO,MAKhC,UALiDA,EAI9BnB,KACnB,eAL2DoB,KAAK,IAChE1C,EAAKI,UAAUO,UAAY4B,EAPtBI,CAActB,MAEhBH,OAAM,SAAAC,GAAK,OAAEC,QAAQD,MAAM,YAAYA,MCtChB,IAAAP,IDUmC,Q","file":"main.1a5ba2d472de3233f21c.js","sourcesContent":["import './styles.css';\r\nimport {fetchCountries} from './fetchCountries';\r\nimport PNotify from 'pnotify/dist/es/PNotify.js';\r\nimport 'pnotify/dist/PNotifyBrightTheme.css';\r\n\r\nconst debounce = require('lodash.debounce')\r\n\r\nconst refs = {\r\n    searchInput: document.querySelector('.input-value'),\r\n    listItems: document.querySelector('#js-data'),\r\n}\r\n\r\nrefs.searchInput.addEventListener('input', debounce(hardleInput, 500))\r\n\r\nfunction hardleInput(e){\r\n    e.preventDefault();\r\n    const inputValue = e.target.value;\r\n    if(inputValue === ''){\r\n        return refs.listItems.innerHTML = '';\r\n    }\r\n        \r\n    fetchCountries(inputValue).then(data => {\r\n        // console.log(data[0])\r\n        const name = data[0].name;\r\n        const capital = data[0].capital;\r\n        const population = data[0].population;\r\n        const flag = data[0].flag;\r\n        const languages = data[0].languages;\r\n\r\n        template(name, capital, population, flag, languages);\r\n        \r\n        if(data.length > 10){\r\n            PNotify.error({\r\n                title: 'Oh No!',\r\n                text: 'Too many matches found.Please enter a more specific query!'\r\n            });\r\n        \r\n        } else if (data.length > 1 && data.length < 10){\r\n         countriesName(data)            \r\n        } \r\n    }).catch(error=>console.error('Error---:',error));\r\n}\r\n\r\nfunction countriesName(data) {\r\n    const allname = data.map(country => templateName(country)).join('')\r\n    refs.listItems.innerHTML = allname;\r\n}\r\n\r\nfunction templateName({name}){\r\n    return `<li><p>${name}</p></li>`\r\n}\r\n\r\nfunction template(name, capital, population, flag, languages) {    \r\n    const description = `\r\n    <li>\r\n        <h2>${name}</h2>\r\n        <p style:\"fon-weight=600\"><strong>Capital:</strong> ${capital}</p>\r\n        <p><strong>Population:</strong> ${population}</p>\r\n        <p><strong>Languages:</strong> ${getLanguages(languages)}</p>  \r\n        <img src=\"${flag}\" alt=\"image\" width=\"480\">\r\n    </li>`\r\n    showList(description);\r\n}\r\n\r\nfunction getLanguages (languages) {\r\nreturn languages.reduce((acc, language) => {\r\n    return acc += `<li>${language.name}</li>` \r\n},'')\r\n}\r\n\r\nfunction showList(description) {\r\nconsole.log(description);\r\nrefs.listItems.innerHTML = description;\r\n}\r\n","const baseUrl = 'https://restcountries.eu/rest/v2';\r\n\r\nexport const fetchCountries = searchQuery => {\r\nreturn fetch(`${baseUrl}/name/${searchQuery}`)\r\n.then(response => response.json())\r\n.catch(error=>console.error('Error---:',error));\r\n}\r\n"],"sourceRoot":""}